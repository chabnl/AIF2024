'''
def predict():

    img_binary = request.data
    img_pil = Image.open(io.BytesIO(img_binary))
    # Transform the PIL image
    tensor = transform(img_pil).to(device)

    tensor = tensor.unsqueeze(0)  # Add batch dimension

    # Make prediction
    with torch.no_grad():
        outputs = model(tensor)
        _, predicted = outputs.max(1)
    return jsonify({"prediction": int(predicted[0])})

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5000, debug=True)'''
